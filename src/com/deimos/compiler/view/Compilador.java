/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.deimos.compiler.view;

import com.deimos.compiler.util.FileHandler;
import com.deimos.compiler.editor_theme.LookAndFeelHandler;
import com.deimos.compiler.util.TextLineNumber;
import com.deimos.compiler.generate_analysis.GenerateAnalysis;
import com.deimos.compiler.lexical_analysis.LexicalAnalyzer;
import com.deimos.compiler.model.AnalysisErrors;
import java.awt.Color;
import java.io.FileNotFoundException;
import java.util.ArrayList;

import javax.swing.JRadioButtonMenuItem;
import javax.swing.filechooser.FileSystemView;

/**
 *
 * @author arcin
 */
public class Compilador extends javax.swing.JFrame {
    
    private static final String THEME_MATERIAL_DARK = "MATERIAL DARK";
    private static final String THEME_MATERIAL_LIGHT = "MATERIAL LIGHT";
    private static final String THEME_ONE_DARK = "ONE DARK";
    private static final String THEME_MONOKAI = "MONOKAI";
    private static final String THEME_MOONLIGHT = "MOONLIGHT";
        
    private final FileHandler lookAndFeelFile;
    private final LexicalAnalyzer lexicalAnalyzer;
    public static ArrayList<String> erroresLexicos = new ArrayList<>();
    
    
    /**
     * Creates new form Compilador
     */
    public Compilador() {

        initComponents();
        
        this.lookAndFeelFile = new FileHandler("lookandfeel.txt", FileSystemView.getFileSystemView().getDefaultDirectory().getPath()+"//compiler");
        this.lexicalAnalyzer = new LexicalAnalyzer();
        
        /**
        *
        * Generate Analyzers
        *
        */    
        GenerateAnalysis.main();
        
        
        /**
        *
        * Center Window
        *
        */        
        this.setLocationRelativeTo(null);
        
        /**
        *
        * Add TextLineNumber to TextPane
        *
        */    
        scrollPane_editor.setRowHeaderView(new TextLineNumber(textPane_editor));
        scrollPane_console.setRowHeaderView(new TextLineNumber(textPane_console));
        
        /**
        *
        * Set LookAndFeel
        *
        */
        new LookAndFeelHandler(this).setLookAndFeel();    
        
        /**
         *
         * Set Themes values
         *
         */
        radioMenu_Monokai.setSelected(lookAndFeelFile.read().equals("MONOKAI"));
        radioMenu_Monokai.setEnabled(!lookAndFeelFile.read().equals("MONOKAI"));
        radioMenu_One_Dark.setSelected(lookAndFeelFile.read().equals("ONE DARK"));
        radioMenu_One_Dark.setEnabled(!lookAndFeelFile.read().equals("ONE DARK"));
        radioMenu_Material_Dark.setSelected(lookAndFeelFile.read().equals("MATERIAL DARK"));
        radioMenu_Material_Dark.setEnabled(!lookAndFeelFile.read().equals("MATERIAL DARK"));
        radioMenu_Material_Light.setSelected(lookAndFeelFile.read().equals("MATERIAL LIGHT"));
        radioMenu_Material_Light.setEnabled(!lookAndFeelFile.read().equals("MATERIAL LIGHT"));
        radioMenu_Moonlight.setSelected(lookAndFeelFile.read().equals("MOONLIGHT"));
        radioMenu_Moonlight.setEnabled(!lookAndFeelFile.read().equals("MOONLIGHT"));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        panel_contenedor = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        scroll_panel_tree = new javax.swing.JScrollPane();
        jTree1 = new javax.swing.JTree();
        splitPane_main = new javax.swing.JSplitPane();
        scrollPane_editor = new javax.swing.JScrollPane();
        textPane_editor = new javax.swing.JTextPane()  {
            @Override
            public boolean getScrollableTracksViewportWidth() {
                return getUI().getPreferredSize(this).width
                <= getParent().getSize().width;
            }
        };
        scrollPane_console = new javax.swing.JScrollPane();
        textPane_console = new javax.swing.JTextPane();
        pane_toolbar = new javax.swing.JPanel();
        toolbar_buttons = new javax.swing.JToolBar();
        filler29 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        filler30 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(10, 32767));
        btn_open = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        btn_save = new javax.swing.JButton();
        filler23 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        jSeparator13 = new javax.swing.JToolBar.Separator();
        filler24 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        btn_cut = new javax.swing.JButton();
        filler16 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        btn_copy = new javax.swing.JButton();
        filler17 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        btn_paste = new javax.swing.JButton();
        filler26 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        jSeparator14 = new javax.swing.JToolBar.Separator();
        filler27 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        btn_undo = new javax.swing.JButton();
        btn_redo = new javax.swing.JButton();
        filler25 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        jSeparator15 = new javax.swing.JToolBar.Separator();
        filler28 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        btn_compilar = new javax.swing.JButton();
        filler22 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        menuBar_principal = new javax.swing.JMenuBar();
        menu_file = new javax.swing.JMenu();
        menu_edit = new javax.swing.JMenu();
        menuItem_cut = new javax.swing.JMenuItem();
        menuItem_copy = new javax.swing.JMenuItem();
        menuItem_paste = new javax.swing.JMenuItem();
        menu_view = new javax.swing.JMenu();
        menu_themes = new javax.swing.JMenu();
        radioMenu_Material_Dark = new javax.swing.JRadioButtonMenuItem();
        radioMenu_Material_Light = new javax.swing.JRadioButtonMenuItem();
        radioMenu_One_Dark = new javax.swing.JRadioButtonMenuItem();
        radioMenu_Monokai = new javax.swing.JRadioButtonMenuItem();
        radioMenu_Moonlight = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(20);

        scroll_panel_tree.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTree1.setFocusable(false);
        jTree1.setShowsRootHandles(true);
        scroll_panel_tree.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(scroll_panel_tree);

        splitPane_main.setBorder(null);
        splitPane_main.setDividerLocation(285);
        splitPane_main.setDividerSize(20);
        splitPane_main.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        splitPane_main.setResizeWeight(0.7);
        splitPane_main.setToolTipText("");

        scrollPane_editor.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scrollPane_editor.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        textPane_editor.setBorder(null);
        textPane_editor.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        textPane_editor.setHighlighter(null);
        textPane_editor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textPane_editorKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textPane_editorKeyReleased(evt);
            }
        });
        scrollPane_editor.setViewportView(textPane_editor);

        splitPane_main.setTopComponent(scrollPane_editor);

        scrollPane_console.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        scrollPane_console.setForeground(new java.awt.Color(102, 102, 102));
        scrollPane_console.setFocusCycleRoot(true);

        textPane_console.setEditable(false);
        textPane_console.setBorder(null);
        textPane_console.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        textPane_console.setToolTipText("");
        textPane_console.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        scrollPane_console.setViewportView(textPane_console);

        splitPane_main.setBottomComponent(scrollPane_console);

        jSplitPane1.setRightComponent(splitPane_main);

        javax.swing.GroupLayout panel_contenedorLayout = new javax.swing.GroupLayout(panel_contenedor);
        panel_contenedor.setLayout(panel_contenedorLayout);
        panel_contenedorLayout.setHorizontalGroup(
            panel_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_contenedorLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jSplitPane1)
                .addGap(20, 20, 20))
        );
        panel_contenedorLayout.setVerticalGroup(
            panel_contenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
        );

        toolbar_buttons.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        toolbar_buttons.setFloatable(false);
        toolbar_buttons.setRollover(true);
        toolbar_buttons.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        toolbar_buttons.add(filler29);
        toolbar_buttons.add(filler30);

        btn_open.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btn_open.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/carpeta.png"))); // NOI18N
        btn_open.setToolTipText("Abrir");
        btn_open.setFocusable(false);
        btn_open.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_open.setMaximumSize(new java.awt.Dimension(39, 39));
        btn_open.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_open.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_buttons.add(btn_open);
        toolbar_buttons.add(filler3);

        btn_save.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btn_save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/guardar.png"))); // NOI18N
        btn_save.setToolTipText("Guardar");
        btn_save.setFocusable(false);
        btn_save.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_save.setMaximumSize(new java.awt.Dimension(39, 39));
        btn_save.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_buttons.add(btn_save);
        toolbar_buttons.add(filler23);
        toolbar_buttons.add(jSeparator13);
        toolbar_buttons.add(filler24);

        btn_cut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/tijeras.png"))); // NOI18N
        btn_cut.setToolTipText("Cortar");
        btn_cut.setFocusable(false);
        btn_cut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_cut.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_cut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cutActionPerformed(evt);
            }
        });
        toolbar_buttons.add(btn_cut);
        toolbar_buttons.add(filler16);

        btn_copy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/Copiar.png"))); // NOI18N
        btn_copy.setToolTipText("Copiar");
        btn_copy.setFocusable(false);
        btn_copy.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_copy.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_copy.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_copyActionPerformed(evt);
            }
        });
        toolbar_buttons.add(btn_copy);
        toolbar_buttons.add(filler17);

        btn_paste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/clipboard.png"))); // NOI18N
        btn_paste.setToolTipText("Pegar");
        btn_paste.setFocusable(false);
        btn_paste.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_paste.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_paste.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_pasteActionPerformed(evt);
            }
        });
        toolbar_buttons.add(btn_paste);
        toolbar_buttons.add(filler26);
        toolbar_buttons.add(jSeparator14);
        toolbar_buttons.add(filler27);

        btn_undo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/undo.png"))); // NOI18N
        btn_undo.setToolTipText("Deshacer");
        btn_undo.setFocusable(false);
        btn_undo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_undo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_undo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_buttons.add(btn_undo);

        btn_redo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/redo.png"))); // NOI18N
        btn_redo.setToolTipText("Rehacer");
        btn_redo.setFocusable(false);
        btn_redo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_redo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_redo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toolbar_buttons.add(btn_redo);
        toolbar_buttons.add(filler25);
        toolbar_buttons.add(jSeparator15);
        toolbar_buttons.add(filler28);

        btn_compilar.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        btn_compilar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/deimos/compiler/resources/jugar.png"))); // NOI18N
        btn_compilar.setToolTipText("Compilar");
        btn_compilar.setFocusable(false);
        btn_compilar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_compilar.setMaximumSize(new java.awt.Dimension(39, 39));
        btn_compilar.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btn_compilar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_compilar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_compilarActionPerformed(evt);
            }
        });
        toolbar_buttons.add(btn_compilar);
        toolbar_buttons.add(filler22);

        javax.swing.GroupLayout pane_toolbarLayout = new javax.swing.GroupLayout(pane_toolbar);
        pane_toolbar.setLayout(pane_toolbarLayout);
        pane_toolbarLayout.setHorizontalGroup(
            pane_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pane_toolbarLayout.createSequentialGroup()
                .addComponent(toolbar_buttons, javax.swing.GroupLayout.DEFAULT_SIZE, 1020, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        pane_toolbarLayout.setVerticalGroup(
            pane_toolbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toolbar_buttons, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        menuBar_principal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menu_file.setText("File");
        menu_file.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuBar_principal.add(menu_file);

        menu_edit.setText("Edit");
        menu_edit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuItem_cut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_cut.setText("Cut");
        menuItem_cut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_cutActionPerformed(evt);
            }
        });
        menu_edit.add(menuItem_cut);

        menuItem_copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_copy.setText("Copy");
        menuItem_copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_copyActionPerformed(evt);
            }
        });
        menu_edit.add(menuItem_copy);

        menuItem_paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        menuItem_paste.setText("Paste");
        menuItem_paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItem_pasteActionPerformed(evt);
            }
        });
        menu_edit.add(menuItem_paste);

        menuBar_principal.add(menu_edit);

        menu_view.setText("View");
        menu_view.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menu_themes.setText("Themes");

        radioMenu_Material_Dark.setText("Material Dark");
        radioMenu_Material_Dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMenu_Material_DarkActionPerformed(evt);
            }
        });
        menu_themes.add(radioMenu_Material_Dark);

        radioMenu_Material_Light.setSelected(true);
        radioMenu_Material_Light.setText("Material Light");
        radioMenu_Material_Light.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMenu_Material_LightActionPerformed(evt);
            }
        });
        menu_themes.add(radioMenu_Material_Light);

        radioMenu_One_Dark.setText("One Dark");
        radioMenu_One_Dark.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMenu_One_DarkActionPerformed(evt);
            }
        });
        menu_themes.add(radioMenu_One_Dark);

        radioMenu_Monokai.setText("Monokai");
        radioMenu_Monokai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMenu_MonokaiActionPerformed(evt);
            }
        });
        menu_themes.add(radioMenu_Monokai);

        radioMenu_Moonlight.setSelected(true);
        radioMenu_Moonlight.setText("Moonlight");
        radioMenu_Moonlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMenu_MoonlightActionPerformed(evt);
            }
        });
        menu_themes.add(radioMenu_Moonlight);

        menu_view.add(menu_themes);

        menuBar_principal.add(menu_view);

        setJMenuBar(menuBar_principal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pane_toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panel_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pane_toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panel_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItem_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_cutActionPerformed
       textPane_editor.cut();
    }//GEN-LAST:event_menuItem_cutActionPerformed

    private void btn_cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cutActionPerformed
       textPane_editor.cut();
    }//GEN-LAST:event_btn_cutActionPerformed

    private void menuItem_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_copyActionPerformed
        textPane_editor.copy();
    }//GEN-LAST:event_menuItem_copyActionPerformed

    private void menuItem_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItem_pasteActionPerformed
        textPane_editor.paste();
    }//GEN-LAST:event_menuItem_pasteActionPerformed

    private void btn_copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_copyActionPerformed
        textPane_editor.copy();
    }//GEN-LAST:event_btn_copyActionPerformed

    private void btn_pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_pasteActionPerformed
        textPane_editor.paste();
    }//GEN-LAST:event_btn_pasteActionPerformed

    private void radioMenu_Material_DarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMenu_Material_DarkActionPerformed
        setTheme(THEME_MATERIAL_DARK, radioMenu_Material_Dark);
    }//GEN-LAST:event_radioMenu_Material_DarkActionPerformed

    private void radioMenu_Material_LightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMenu_Material_LightActionPerformed
        setTheme(THEME_MATERIAL_LIGHT, radioMenu_Material_Light);
    }//GEN-LAST:event_radioMenu_Material_LightActionPerformed

    private void radioMenu_One_DarkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMenu_One_DarkActionPerformed
        setTheme(THEME_ONE_DARK, radioMenu_One_Dark);
    }//GEN-LAST:event_radioMenu_One_DarkActionPerformed

    private void radioMenu_MonokaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMenu_MonokaiActionPerformed
        setTheme(THEME_MONOKAI, radioMenu_Monokai);
    }//GEN-LAST:event_radioMenu_MonokaiActionPerformed

    private void radioMenu_MoonlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMenu_MoonlightActionPerformed
        setTheme(THEME_MOONLIGHT, radioMenu_Moonlight);
    }//GEN-LAST:event_radioMenu_MoonlightActionPerformed

    private void btn_compilarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_compilarActionPerformed
        compile();
    }//GEN-LAST:event_btn_compilarActionPerformed

    private void textPane_editorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPane_editorKeyPressed
//        lexicalAnalyzer.start(textPane_editor);
//        wordPainter.paint(textoC, textPane_editor);
//        textoC.clear();
    }//GEN-LAST:event_textPane_editorKeyPressed

    private void textPane_editorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textPane_editorKeyReleased
//        lexicalAnalyzer.start(textPane_editor);
//        wordPainter.paint(textoC, textPane_editor);
//        textoC.clear();
    }//GEN-LAST:event_textPane_editorKeyReleased
    
    /**
     *
     * Defines radioMentu state for all themes
     * @param radioMenu 
     */
    private void radioMenuBehavior(JRadioButtonMenuItem radioMenu){
        radioMenu_Material_Dark.setSelected(false);
        radioMenu_Material_Dark.setEnabled(true);
        
        radioMenu_Material_Light.setSelected(false);
        radioMenu_Material_Light.setEnabled(true);
        
        radioMenu_One_Dark.setSelected(false);
        radioMenu_One_Dark.setEnabled(true);
        
        radioMenu_Monokai.setSelected(false);
        radioMenu_Monokai.setEnabled(true);    
        
        radioMenu_Moonlight.setSelected(false);
        radioMenu_Moonlight.setEnabled(true);    
        
        radioMenu.setEnabled(false);
        radioMenu.setSelected(true);
    }
    
    /**
     *
     * Sets the theme for the UI and change radioMenu behaviour
     * @param theme
     * @param radioMenu 
     */
    private void setTheme(String theme, JRadioButtonMenuItem radioMenu){
        lookAndFeelFile.write(theme);
        new LookAndFeelHandler(this).setLookAndFeel();
        radioMenuBehavior(radioMenu);
    }
    
    private void compile(){
        AnalysisErrors analysisErrors = new AnalysisErrors();
        
        analysisErrors = lexicalAnalyzer.start(analysisErrors, textPane_editor.getText());
        
        if(!analysisErrors.getLexicalErrors().isEmpty()){
            textPane_console.setText(analysisErrors.getLexicalErrors().get(0) + "\n> BUILD FAILED");
            textPane_console.setForeground(Color.red);
        }else{
            textPane_console.setText("> BUILD SUCCESSFUL");
            textPane_console.setForeground(new Color(25, 111, 61));
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws FileNotFoundException {
        
        /* Initialize Frame */
        Compilador compilador = new Compilador();
        
        /* Create and display the Frame */
        java.awt.EventQueue.invokeLater(() -> {
            compilador.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_compilar;
    private javax.swing.JButton btn_copy;
    private javax.swing.JButton btn_cut;
    private javax.swing.JButton btn_open;
    private javax.swing.JButton btn_paste;
    private javax.swing.JButton btn_redo;
    private javax.swing.JButton btn_save;
    private javax.swing.JButton btn_undo;
    private javax.swing.Box.Filler filler16;
    private javax.swing.Box.Filler filler17;
    private javax.swing.Box.Filler filler22;
    private javax.swing.Box.Filler filler23;
    private javax.swing.Box.Filler filler24;
    private javax.swing.Box.Filler filler25;
    private javax.swing.Box.Filler filler26;
    private javax.swing.Box.Filler filler27;
    private javax.swing.Box.Filler filler28;
    private javax.swing.Box.Filler filler29;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler30;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JToolBar.Separator jSeparator13;
    private javax.swing.JToolBar.Separator jSeparator14;
    private javax.swing.JToolBar.Separator jSeparator15;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTree1;
    private javax.swing.JMenuBar menuBar_principal;
    private javax.swing.JMenuItem menuItem_copy;
    private javax.swing.JMenuItem menuItem_cut;
    private javax.swing.JMenuItem menuItem_paste;
    private javax.swing.JMenu menu_edit;
    private javax.swing.JMenu menu_file;
    private javax.swing.JMenu menu_themes;
    private javax.swing.JMenu menu_view;
    private javax.swing.JPanel pane_toolbar;
    private javax.swing.JPanel panel_contenedor;
    private javax.swing.JRadioButtonMenuItem radioMenu_Material_Dark;
    private javax.swing.JRadioButtonMenuItem radioMenu_Material_Light;
    private javax.swing.JRadioButtonMenuItem radioMenu_Monokai;
    private javax.swing.JRadioButtonMenuItem radioMenu_Moonlight;
    private javax.swing.JRadioButtonMenuItem radioMenu_One_Dark;
    private javax.swing.JScrollPane scrollPane_console;
    private javax.swing.JScrollPane scrollPane_editor;
    private javax.swing.JScrollPane scroll_panel_tree;
    private javax.swing.JSplitPane splitPane_main;
    private javax.swing.JTextPane textPane_console;
    private javax.swing.JTextPane textPane_editor;
    private javax.swing.JToolBar toolbar_buttons;
    // End of variables declaration//GEN-END:variables
}
